# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#

#https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
# for this solution https://jackiechen.blog/2023/05/10/build-docker-image-with-kaniko-in-gitlab-pipeline/
# but with some fix - it is tested and working
build:
  variables:
    DOCKER_IMAGE_NAME: $REGISTRY_URL/$CI_PROJECT_TITLE/YOUR_PROJECT
  stage: build
  image:
    # using kaniko since we have only k8s runner executor
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  before_script:
    - echo "Reading env file for the version..."
    - grep APP_VERSION app/env.sample >> $GITLAB_ENV
    - echo "Generating auth file for registry login..."
    - AUTH=$(echo -n ${REGISTRY_USER}:${REGISTRY_PASSWD} | base64 |tr -d "\n")
    - cp -f "${CI_PROJECT_DIR}/config.json" /kaniko/.docker/config.json
    - sed -i "s/AUTH_PLACE_HOLDER/${AUTH}/" /kaniko/.docker/config.json
    - sed -i "s/REGISTRY_URL_PLACE_HOLDER/${REGISTRY_URL}/g" /kaniko/.docker/config.json
    #- echo "File generated..."
    #- cat /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --build-arg VERSION="${APP_VERSION}"
      --build-arg http_proxy=$HTTP_PROXY
      --build-arg https_proxy=$HTTPS_PROXY
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${DOCKER_IMAGE_NAME}:${APP_VERSION}"
      --skip-tls-verify-registry ${REGISTRY_URL}
      # uncomment in case needed to set proxy manually
      #--build-arg no_proxy=$no_proxy
  #rules:
  #  - if: $CI_COMMIT_TAG
  rules:
   - if: $CI_COMMIT_BRANCH
     exists:
       - Dockerfile
